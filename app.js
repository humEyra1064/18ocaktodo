//! Elements

const todoInput = document.getElementById("todo-input"); //? works faster than querySelector

const addBtn = document.querySelector("#todo-button");

const todoUl = document.querySelector("#todo-ul");

//? data is kept as "string" in local storage
//? we should parse it to array with "JSON.parse()"

let todoList = JSON.parse(localStorage.getItem("todoList")) || []
//local storage de veriler string olarak tutuluyor o yÃ¼zden bizim onlarÄ± parse edip array haline sokmamÄ±z lazÄ±m.Burda ÅŸunu yaptÄ±k local storage de veri varsa(todolist) dizi haline soksun veya boÅŸ bir array oluÅŸtursun.iÅŸlemler esnasÄ±nda gÃ¼ncellenebilen global bir dizi oldu bu.Daha Ã¶nce kaydettiÄŸimiz verileri bu dizi vasÄ±tasÄ± ile localstorage gÃ¶nderceÄŸiz.todo listin son halini array halinde localstoragede saklayacaÄŸÄ±z.ðŸ‘†



window.addEventListener("load", () => {
    getTodoListFromLocalStorage();
});
//localstorageden gelen verileri alÄ±p ekrana basmak iÃ§in bÃ¶yle bir fonksiyon tanÄ±mladÄ±k.ðŸ‘†
const getTodoListFromLocalStorage = () => {
    
}
//local storageden aldÄ±ÄŸÄ±m verileri arayÃ¼ze yÃ¼kleyecek.ðŸ‘†


addBtn.addEventListener("click", (e) => {
   
    e.preventDefault(); //sen bir formsun senin gÃ¶revin verileri submit etmek aslÄ±nda ama ben senin default olarak submit etmek olan gÃ¶revini prevent(Ã¶nlÃ¼yorum)Ã§Ã¼nkÃ¼ default olarak gÃ¶revi sayfayÄ± yenilemek bunu Ã¶nlemeye Ã§alÄ±ÅŸÄ±yoruz.submit etmeyip buton click olarak Ã§alÄ±ÅŸacaksÄ±n yoksa eklediÄŸimiz verileri sayfamÄ±zda gÃ¶remeyiz sayfa yenilendiÄŸi iÃ§in.ðŸ‘†

    if(todoInput.value.trim() === ""){

        alert("Please, enter new todo text!");
          return;
    }
    // inputun iÃ§indeki veriye ulaÅŸtÄ±k eÄŸer veri boÅŸ ise alert ile uyarÄ± verecek.return yazmamÄ±zÄ±n sebebi de fonksiyondan Ã§Ä±kmasÄ±nÄ± saÄŸlamak.ðŸ‘†

    const newTodo = {
        //yeni bir obje yapÄ±sÄ± oluÅŸturuyoruz ðŸ‘‡
        id : new Date().getTime(), //! ðŸ‘ˆ unique(benzersiz) ID with milliseconds of now.newdate ile ÅŸuandaki tarihi alÄ±p milisaniyeye Ã§eviriyoruz gettime ile.Benzersiz olmasÄ± iÃ§in bunu yaptÄ±k.
        completed : false, //! ðŸ‘ˆ STATUS item larÄ± tamamlayÄ±p tamamlamadÄ±ÄŸÄ±mÄ± veri tabanÄ±nda tutacak.Telefon kapandÄ±ÄŸÄ±nda da kayÄ±t etmiÅŸ olacak.default olarak itemlar yani gÃ¶revler tamamlanmamÄ±ÅŸ kabul edilecek.
        text : todoInput.value //! ðŸ‘ˆ USER INPUT kullanÄ±cÄ±nÄ±n girdiÄŸi yapÄ±lacak listesi
        
    }

    createTodo(newTodo);//kullanÄ±cÄ±dan alÄ±nan objeyi oluÅŸturuyoruz. 
    
todoList.push(newTodo);
//newtodo objesinde kullanÄ±cÄ±nÄ±n girdiÄŸi bilgileri global alanda oluÅŸturduÄŸumuz todoList array ine push luyoruz.
//!!!!!!!!stringify!!!!!!!!!array i stringe Ã§eviriyor.Ã§Ã¼nkÃ¼ localstorage de text olarak string olarak tutmamÄ±z gerekiyor.setitem yaparken stringfy getitem yaparken parse unutma!!!!!
localStorage.setItem("todoList", JSON.stringify(todoList));
//set item ile gÃ¼ncel olan todolist i local storage veriyoruz. ilk parametre key ikinci olan value.
e.target.closest("form").reset();//formun iÃ§indeki tÃ¼m inputlarÄ± resetliyor.e.target buton demekti ordan forma gitti ve resetledi.

})




const createTodo = (newTodo) =>{
//todo item creation newtodo objesi fonksiyonun iÃ§ine geliyor.Burdaki verileri destr.edceÄŸiz ve ilgili html ve buton vasÄ±tasi ile arkadaki localstorage bascaÄŸÄ±z.
//alert("item was added");newTodo objemi oluÅŸturdum createTodo fonksiyonuma verdim destr.ettim istediÄŸim htmel formatÄ±nda basacaÄŸÄ±m uÄ±.
//obj. dest. (ES6 => JS'e kazandÄ±rÄ±lan yapÄ±lar??)
const { id, completed, text } = newTodo;

//create li
const li = document.createElement("li");
li.setAttribute("id", id);

//add class with completed(status)
completed ? li.classList.add("checked") : "";

//create check icon
const icon = document.createElement("i");
icon.setAttribute("class", "fas fa-check");
//append vs. appendChild
li.append(icon);

//create item text
const p = document.createElement("p");
p.innerText = text;
li.appendChild(p);

//create remove icon
const removeIcon = document.createElement("i");
removeIcon.setAttribute("class", "fas fa-trash");
li.append(removeIcon);

console.log(li);

//append li to ul
todoUl.append(li);
}